#!/bin/bash
# build.sh - –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

PROJECT_NAME="kunstkammer"
BUILD_DIR="build"
DEFAULT_BUILD_TYPE="RelWithDebInfo"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local missing_deps=()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ C++
    if ! command -v g++ &> /dev/null && ! command -v clang++ &> /dev/null; then
        missing_deps+=("C++ compiler (g++ or clang++)")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ CMake
    if ! command -v cmake &> /dev/null; then
        missing_deps+=("CMake")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Make
    if ! command -v make &> /dev/null; then
        missing_deps+=("GNU Make")
    fi
    
    if [ ${#missing_deps[@]} -ne 0 ]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
        for dep in "${missing_deps[@]}"; do
            echo "   - $dep"
        done
        echo ""
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ä—Å–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    echo "üìã –í–µ—Ä—Å–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:"
    if command -v g++ &> /dev/null; then
        echo "   - g++: $(g++ --version | head -n1)"
    fi
    if command -v clang++ &> /dev/null; then
        echo "   - clang++: $(clang++ --version | head -n1)"
    fi
    echo "   - CMake: $(cmake --version | head -n1)"
    echo "   - Make: $(make --version | head -n1)"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ CMake
detect_cmake_generator() {
    if command -v ninja &> /dev/null; then
        echo "Ninja"
    elif command -v make &> /dev/null; then
        echo "Unix Makefiles"
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–±–æ—Ä–∫–∏ (make –∏–ª–∏ ninja)"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û–ü–¶–ò–ò:"
    echo "  -d, --debug      –°–±–æ—Ä–∫–∞ –≤ —Ä–µ–∂–∏–º–µ Debug"
    echo "  -r, --release    –°–±–æ—Ä–∫–∞ –≤ —Ä–µ–∂–∏–º–µ Release"
    echo "  -p, --profile    –°–±–æ—Ä–∫–∞ –≤ —Ä–µ–∂–∏–º–µ RelWithDebInfo (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  -s, --minsize    –°–±–æ—Ä–∫–∞ –≤ —Ä–µ–∂–∏–º–µ MinSizeRel"
    echo "  -c, --clean      –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π"
    echo "  -j, --jobs N     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö jobs (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: nproc)"
    echo "  -g, --generator  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (make, ninja)"
    echo "  -v, --verbose    –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥"
    echo "  -h, --help       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü–†–ò–ú–ï–†–´:"
    echo "  $0 -r           # Release —Å–±–æ—Ä–∫–∞"
    echo "  $0 -d -c        # Debug —Å–±–æ—Ä–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π"
    echo "  $0 -r -j 4      # Release —Å–±–æ—Ä–∫–∞ —Å 4 –ø–æ—Ç–æ–∫–∞–º–∏"
    echo "  $0 -g ninja     # –°–±–æ—Ä–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ninja"
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
BUILD_TYPE="$DEFAULT_BUILD_TYPE"
CLEAN_BUILD=false
VERBOSE=false
JOBS=$(nproc)
GENERATOR=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -d|--debug)
            BUILD_TYPE="Debug"
            shift
            ;;
        -r|--release)
            BUILD_TYPE="Release"
            shift
            ;;
        -p|--profile)
            BUILD_TYPE="RelWithDebInfo"
            shift
            ;;
        -s|--minsize)
            BUILD_TYPE="MinSizeRel"
            shift
            ;;
        -c|--clean)
            CLEAN_BUILD=true
            shift
            ;;
        -j|--jobs)
            JOBS="$2"
            shift 2
            ;;
        -g|--generator)
            GENERATOR="$2"
            shift 2
            ;;
        -v|--verbose)
            VERBOSE=true
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
check_dependencies

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω —è–≤–Ω–æ
if [ -z "$GENERATOR" ]; then
    GENERATOR=$(detect_cmake_generator)
fi

echo "üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: $GENERATOR"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–±–æ—Ä–∫–∏
mkdir -p "$BUILD_DIR"

# –û—á–∏—Å—Ç–∫–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ "$CLEAN_BUILD" = true ]; then
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–±–æ—Ä–∫–∏..."
    rm -rf "$BUILD_DIR"/*
fi

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo "‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏: $BUILD_TYPE"
cd "$BUILD_DIR"

CMAKE_CMD="cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G \"$GENERATOR\" .."
if [ "$VERBOSE" = true ]; then
    echo "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: $CMAKE_CMD"
fi

eval $CMAKE_CMD

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ CMake!"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è:"
    echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä C++"
    echo "2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä: $0 -g ninja"
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
    exit 1
fi

# –°–±–æ—Ä–∫–∞
echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å $JOBS –ø–æ—Ç–æ–∫–∞–º–∏..."
MAKE_CMD="cmake --build . --config $BUILD_TYPE -- -j$JOBS"
if [ "$VERBOSE" = true ]; then
    echo "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: $MAKE_CMD"
fi

eval $MAKE_CMD

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if [ -f "$PROJECT_NAME" ] || [ -f "$PROJECT_NAME.exe" ]; then
    echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "üì¶ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: $BUILD_DIR/$PROJECT_NAME"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∏–Ω–∞—Ä–Ω–∏–∫–µ
    echo ""
    echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏–Ω–∞—Ä–Ω–∏–∫–µ:"
    if [ -f "$PROJECT_NAME" ]; then
        file "$PROJECT_NAME"
        size "$PROJECT_NAME" 2>/dev/null || ls -lh "$PROJECT_NAME" | awk '{print "Size: " $5}'
    else
        ls -lh "$PROJECT_NAME.exe" | awk '{print "Size: " $5}'
    fi
else
    echo "‚ùå –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏!"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫."
    exit 1
fi